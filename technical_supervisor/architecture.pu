@startuml
skinparam nodesep 10
skinparam ranksep 5

scale 1.0

node "Clients" as client_side {
    component "GUI" as gui
    component "GUI2" as gui2
}

node "Technical supervisor system" as ts {
    rectangle "Public APIs" {
            component "REST API" as rest_api
            component "Websockets/WebRTC API" as ws_api
            component "ORM" as orm
        }

    rectangle "Backend services" as backend {
        component "Auth module" as auth
        component "Assignment engine" as assignment_engine
        component "Notification engine" as notification_engine
        component "Logging engine" as log_engine
    }

    component "MQTT client" as mqtt_client

    database "Database" as db {
        component "ADS profile"
        component "Cases"
        component "Geozones"
        component "Users"
        component "User roles"
        component "User permissions"
        component "User logs"
        component "Notifications"
    }
}


node "ADS1" as ads_node { 
    node "ADS" as ads1
    database "Raw sensor logs (blackbox)" as raw_logs_ads1
    database "Node logs (main board)" as logs_ads1
}

node "ADS2" as ads_node2 { 
    node "ADS" as ads2
    database "Raw sensor logs (blackbox)" as raw_logs_ads2
    database "Node logs (main board)" as logs_ads2
}

ads1 -down-> raw_logs_ads1
ads1 -down-> logs_ads1
ads2 -down-> raw_logs_ads2
ads2 -down-> logs_ads2
ads1 <-d-> mqtt_client
ads2 <-u-> mqtt_client
client_side -down-> rest_api
client_side <-down-> ws_api
rest_api --> auth
rest_api --> log_engine
rest_api -u-> orm
ws_api -u-> orm
orm -d-> db
ws_api -d-> assignment_engine
notification_engine -r-> ws_api
ws_api <-d-> mqtt_client
@enduml